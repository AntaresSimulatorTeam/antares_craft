# Copyright (c) 2024, RTE (https://www.rte-france.com)
#
# See AUTHORS.txt
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# SPDX-License-Identifier: MPL-2.0
#
# This file is part of the Antares project.
import pytest

from datetime import datetime
from pathlib import Path

from antares.craft import ThematicTrimmingParameters
from antares.craft.model.output import (
    XpansionOutputAntares,
    XpansionOutputCandidate,
    XpansionOutputCandidateInvest,
    XpansionOutputCandidateSensitivity,
    XpansionOutputIteration,
    XpansionOutputOptions,
    XpansionOutputSensitivitySolution,
    XpansionOutputSolution,
    XpansionResult,
    XpansionSensitivityResult,
)


@pytest.fixture
def default_thematic_trimming_88() -> ThematicTrimmingParameters:
    return ThematicTrimmingParameters(
        psp_open_injection=True,
        psp_open_withdrawal=True,
        psp_open_level=True,
        psp_closed_injection=True,
        psp_closed_withdrawal=True,
        psp_closed_level=True,
        pondage_injection=True,
        pondage_withdrawal=True,
        pondage_level=True,
        battery_injection=True,
        battery_withdrawal=True,
        battery_level=True,
        other1_injection=True,
        other1_withdrawal=True,
        other1_level=True,
        other2_injection=True,
        other2_withdrawal=True,
        other2_level=True,
        other3_injection=True,
        other3_withdrawal=True,
        other3_level=True,
        other4_injection=True,
        other4_withdrawal=True,
        other4_level=True,
        other5_injection=True,
        other5_withdrawal=True,
        other5_level=True,
        misc_dtg_2=True,
        misc_dtg_3=True,
        misc_dtg_4=True,
        wind_offshore=True,
        wind_onshore=True,
        solar_concrt=True,
        solar_pv=True,
        solar_rooft=True,
        renw_1=True,
        renw_2=True,
        renw_3=True,
        renw_4=True,
        solar=True,
        nuclear=True,
        lignite=True,
        coal=True,
        gas=True,
        oil=True,
        mix_fuel=True,
        misc_dtg=True,
    )


@pytest.fixture
def xpansion_input_path() -> Path:
    return Path(__file__).parent / "assets" / "expansion_in.zip"


@pytest.fixture
def xpansion_output_path() -> Path:
    return Path(__file__).parent / "assets" / "expansion_out.zip"


@pytest.fixture
def xpansion_expected_output() -> XpansionResult:
    return XpansionResult(
        antares=XpansionOutputAntares(version="9.2.1-rc2"),
        antares_xpansion=XpansionOutputAntares(version="1.4.0"),
        begin=datetime(2025, 5, 23, 11, 35, 36),
        end=datetime(2025, 5, 23, 11, 35, 36),
        iterations={
            1: XpansionOutputIteration(
                best_ub=3361193949.6719112,
                cumulative_number_of_subproblem_resolutions=2,
                investment_cost=0.0,
                lb=-10000000000.0,
                master_duration=0.00244505,
                operational_cost=3361193949.6719112,
                optimality_gap=13361193949.671911,
                overall_cost=3361193949.6719112,
                relative_gap=3.9751332858897084,
                subproblem_duration=0.012069254,
                ub=3361193949.6719112,
            ),
            10: XpansionOutputIteration(
                best_ub=2097808000.3294768,
                cumulative_number_of_subproblem_resolutions=20,
                investment_cost=113403584.76162252,
                lb=2095543409.771229,
                master_duration=0.002110783,
                operational_cost=1984404415.5678544,
                optimality_gap=2264590.5582478046,
                overall_cost=2097808000.3294768,
                relative_gap=0.0010795032519144428,
                subproblem_duration=0.009717264,
                ub=2097808000.3294768,
            ),
            11: XpansionOutputIteration(
                best_ub=2096675715.6698246,
                cumulative_number_of_subproblem_resolutions=22,
                investment_cost=113293726.82588221,
                lb=2095543431.010172,
                master_duration=0.002161518,
                operational_cost=1983381988.8439424,
                optimality_gap=1132284.65965271,
                overall_cost=2096675715.6698246,
                relative_gap=0.0005400380474626613,
                subproblem_duration=0.009659708,
                ub=2096675715.6698246,
            ),
            12: XpansionOutputIteration(
                best_ub=2096109573.339999,
                cumulative_number_of_subproblem_resolutions=24,
                investment_cost=113238797.85801062,
                lb=2095543431.010172,
                master_duration=0.002059121,
                operational_cost=1982870775.4819884,
                optimality_gap=566142.3298270702,
                overall_cost=2096109573.339999,
                relative_gap=0.0002700919536973267,
                subproblem_duration=0.009221242,
                ub=2096109573.339999,
            ),
            13: XpansionOutputIteration(
                best_ub=2095826502.175085,
                cumulative_number_of_subproblem_resolutions=26,
                investment_cost=113211333.3740741,
                lb=2095543431.0101733,
                master_duration=0.002655218,
                operational_cost=1982615168.8010108,
                optimality_gap=283071.164911747,
                overall_cost=2095826502.175085,
                relative_gap=0.0001350642167268955,
                subproblem_duration=0.009952417,
                ub=2095826502.175085,
            ),
            14: XpansionOutputIteration(
                best_ub=2095684966.592628,
                cumulative_number_of_subproblem_resolutions=28,
                investment_cost=113197601.13210586,
                lb=2095543431.0101733,
                master_duration=0.002293341,
                operational_cost=1982487365.4605222,
                optimality_gap=141535.5824546814,
                overall_cost=2095684966.592628,
                relative_gap=6.753666925654573e-05,
                subproblem_duration=0.009164213,
                ub=2095684966.592628,
            ),
            15: XpansionOutputIteration(
                best_ub=2095614198.8014004,
                cumulative_number_of_subproblem_resolutions=30,
                investment_cost=113190735.011121,
                lb=2095543431.0101728,
                master_duration=0.002340262,
                operational_cost=1982423463.7902794,
                optimality_gap=70767.79122757912,
                overall_cost=2095614198.8014004,
                relative_gap=3.376947496731755e-05,
                subproblem_duration=0.009087922,
                ub=2095614198.8014004,
            ),
            16: XpansionOutputIteration(
                best_ub=2095578814.905784,
                cumulative_number_of_subproblem_resolutions=32,
                investment_cost=113187301.95062858,
                lb=2095543431.0101728,
                master_duration=0.002304258,
                operational_cost=1982391512.9551554,
                optimality_gap=35383.895611047745,
                overall_cost=2095578814.905784,
                relative_gap=1.6885022581524133e-05,
                subproblem_duration=0.009123488,
                ub=2095578814.905784,
            ),
            17: XpansionOutputIteration(
                best_ub=2095561122.957978,
                cumulative_number_of_subproblem_resolutions=34,
                investment_cost=113185585.42038237,
                lb=2095543431.0101728,
                master_duration=0.002346619,
                operational_cost=1982375537.5375957,
                optimality_gap=17691.947805166245,
                overall_cost=2095561122.957978,
                relative_gap=8.442582567190057e-06,
                subproblem_duration=0.0091051,
                ub=2095561122.957978,
            ),
            18: XpansionOutputIteration(
                best_ub=2869609160.412566,
                cumulative_number_of_subproblem_resolutions=36,
                investment_cost=76917666.03393763,
                lb=2865158415.528441,
                master_duration=0.006823943,
                operational_cost=2792691494.3786287,
                optimality_gap=4450744.884125233,
                overall_cost=2869609160.412566,
                relative_gap=0.001550993405487089,
                subproblem_duration=0.009002537,
                ub=2869609160.412566,
            ),
            19: XpansionOutputIteration(
                best_ub=2869090488.1444883,
                cumulative_number_of_subproblem_resolutions=38,
                investment_cost=85228461.77611762,
                lb=2867665235.36953,
                master_duration=0.004705998,
                operational_cost=2783862026.3683705,
                optimality_gap=1425252.7749581337,
                overall_cost=2869090488.1444883,
                relative_gap=0.0004967611794913725,
                subproblem_duration=0.008719645,
                ub=2869090488.1444883,
            ),
            2: XpansionOutputIteration(
                best_ub=2705037699.1328998,
                cumulative_number_of_subproblem_resolutions=4,
                investment_cost=59200000.0,
                lb=1604891251.383843,
                master_duration=0.001977913,
                operational_cost=2645837699.1328998,
                optimality_gap=1100146447.7490568,
                overall_cost=2705037699.1328998,
                relative_gap=0.4067028153070506,
                subproblem_duration=0.010942592,
                ub=2705037699.1328998,
            ),
            20: XpansionOutputIteration(
                best_ub=2868575741.419906,
                cumulative_number_of_subproblem_resolutions=40,
                investment_cost=81380109.61079745,
                lb=2868567513.1698866,
                master_duration=0.004320953,
                operational_cost=2787195631.8091087,
                optimality_gap=8228.250019550323,
                overall_cost=2868575741.419906,
                relative_gap=2.868409538831787e-06,
                subproblem_duration=0.008608505,
                ub=2868575741.419906,
            ),
            3: XpansionOutputIteration(
                best_ub=2415727661.5467067,
                cumulative_number_of_subproblem_resolutions=6,
                investment_cost=60884117.590526015,
                lb=2066590240.7504709,
                master_duration=0.001981027,
                operational_cost=2354843543.9561806,
                optimality_gap=349137420.7962358,
                overall_cost=2415727661.5467067,
                relative_gap=0.1445268133298996,
                subproblem_duration=0.010297306,
                ub=2415727661.5467067,
            ),
            4: XpansionOutputIteration(
                best_ub=2249840386.1041617,
                cumulative_number_of_subproblem_resolutions=8,
                investment_cost=84733886.65462318,
                lb=2080470063.1860576,
                master_duration=0.002011677,
                operational_cost=2165106499.4495387,
                optimality_gap=169370322.91810417,
                overall_cost=2249840386.1041617,
                relative_gap=0.07528103947470999,
                subproblem_duration=0.01038485,
                ub=2249840386.1041617,
            ),
            5: XpansionOutputIteration(
                best_ub=2170004003.7852516,
                cumulative_number_of_subproblem_resolutions=10,
                investment_cost=101146736.47053604,
                lb=2086639423.9475389,
                master_duration=0.002063383,
                operational_cost=2068857267.3147154,
                optimality_gap=83364579.83771276,
                overall_cost=2170004003.7852516,
                relative_gap=0.038416786186705444,
                subproblem_duration=0.011139548,
                ub=2170004003.7852516,
            ),
            6: XpansionOutputIteration(
                best_ub=2132004399.9286988,
                cumulative_number_of_subproblem_resolutions=12,
                investment_cost=109447223.5081738,
                lb=2091007658.2338607,
                master_duration=0.002100941,
                operational_cost=2022557176.420525,
                optimality_gap=40996741.69483805,
                overall_cost=2132004399.9286988,
                relative_gap=0.019229201260658333,
                subproblem_duration=0.010229455,
                ub=2132004399.9286988,
            ),
            7: XpansionOutputIteration(
                best_ub=2113672378.1422563,
                cumulative_number_of_subproblem_resolutions=14,
                investment_cost=110994274.73605813,
                lb=2094189168.8096197,
                master_duration=0.0021128,
                operational_cost=2002678103.406198,
                optimality_gap=19483209.332636595,
                overall_cost=2113672378.1422563,
                relative_gap=0.00921770541835851,
                subproblem_duration=0.010088347,
                ub=2113672378.1422563,
            ),
            8: XpansionOutputIteration(
                best_ub=2104496012.9222658,
                cumulative_number_of_subproblem_resolutions=16,
                investment_cost=112600934.00136684,
                lb=2095190677.3840973,
                master_duration=0.002047648,
                operational_cost=1991895078.920899,
                optimality_gap=9305335.53816843,
                overall_cost=2104496012.9222658,
                relative_gap=0.004421645601146665,
                subproblem_duration=0.01010969,
                ub=2104496012.9222658,
            ),
            9: XpansionOutputIteration(
                best_ub=2100072548.5391946,
                cumulative_number_of_subproblem_resolutions=18,
                investment_cost=113622955.23752153,
                lb=2095453530.102893,
                master_duration=0.002085866,
                operational_cost=1986449593.301673,
                optimality_gap=4619018.43630147,
                overall_cost=2100072548.5391946,
                relative_gap=0.0021994566042560994,
                subproblem_duration=0.009805398,
                ub=2100072548.5391946,
            ),
        },
        nb_weeks=3,
        options=XpansionOutputOptions(log_level=0, master_name="master", problem_format="SAVED", solver_name="XPRESS"),
        run_duration=0.285111556,
        solution=XpansionOutputSolution(
            investment_cost=81380109.61079745,
            iteration=20,
            operational_cost=2787195631.8091087,
            optimality_gap=8228.250019550323,
            overall_cost=2868575741.419906,
            problem_status="OPTIMAL",
            relative_gap=2.868409538831787e-06,
            stopping_criterion="absolute gap",
        ),
        candidates={
            "battery": XpansionOutputCandidate(
                solution=433.00182684662417,
                max=1000.0,
                min=0.0,
                iterations=[
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=500.0),
                    XpansionOutputCandidateInvest(invest=284.7352931754335),
                    XpansionOutputCandidateInvest(invest=560.5647775770528),
                    XpansionOutputCandidateInvest(invest=773.2789411756006),
                    XpansionOutputCandidateInvest(invest=881.20372513623),
                    XpansionOutputCandidateInvest(invest=891.7795789343022),
                    XpansionOutputCandidateInvest(invest=910.9530666894473),
                    XpansionOutputCandidateInvest(invest=924.1846706253586),
                    XpansionOutputCandidateInvest(invest=918.6274543603752),
                    XpansionOutputCandidateInvest(invest=915.8459679313702),
                    XpansionOutputCandidateInvest(invest=914.4552247168436),
                    XpansionOutputCandidateInvest(invest=913.7598531095684),
                    XpansionOutputCandidateInvest(invest=913.4121673059308),
                    XpansionOutputCandidateInvest(invest=913.2383244041),
                    XpansionOutputCandidateInvest(invest=913.1514029531845),
                    XpansionOutputCandidateInvest(invest=913.1079422277269),
                    XpansionOutputCandidateInvest(invest=358.627767232294),
                    XpansionOutputCandidateInvest(invest=497.1410296019603),
                    XpansionOutputCandidateInvest(invest=433.00182684662417),
                ],
            ),
            "peak": XpansionOutputCandidate(
                solution=0.0,
                max=2000.0,
                min=0.0,
                iterations=[
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                ],
            ),
            "pv": XpansionOutputCandidate(
                solution=1000.0,
                max=1000.0,
                min=0.0,
                iterations=[
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=500.0),
                    XpansionOutputCandidateInvest(invest=750.0),
                    XpansionOutputCandidateInvest(invest=875.0),
                    XpansionOutputCandidateInvest(invest=937.5),
                    XpansionOutputCandidateInvest(invest=968.75),
                    XpansionOutputCandidateInvest(invest=984.375),
                    XpansionOutputCandidateInvest(invest=992.1875),
                    XpansionOutputCandidateInvest(invest=996.09375),
                    XpansionOutputCandidateInvest(invest=998.046875),
                    XpansionOutputCandidateInvest(invest=999.0234375),
                    XpansionOutputCandidateInvest(invest=999.51171875),
                    XpansionOutputCandidateInvest(invest=999.755859375),
                    XpansionOutputCandidateInvest(invest=999.8779296875),
                    XpansionOutputCandidateInvest(invest=999.93896484375),
                    XpansionOutputCandidateInvest(invest=999.969482421875),
                    XpansionOutputCandidateInvest(invest=999.9847412109375),
                    XpansionOutputCandidateInvest(invest=1000.0),
                    XpansionOutputCandidateInvest(invest=1000.0),
                    XpansionOutputCandidateInvest(invest=1000.0),
                ],
            ),
            "semibase": XpansionOutputCandidate(
                solution=0.0,
                max=2000.0,
                min=0.0,
                iterations=[
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                ],
            ),
            "transmission_line": XpansionOutputCandidate(
                solution=0.0,
                max=3200.0,
                min=0.0,
                iterations=[
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=150.0),
                    XpansionOutputCandidateInvest(invest=225.0),
                    XpansionOutputCandidateInvest(invest=262.5),
                    XpansionOutputCandidateInvest(invest=281.25),
                    XpansionOutputCandidateInvest(invest=290.625),
                    XpansionOutputCandidateInvest(invest=295.3125),
                    XpansionOutputCandidateInvest(invest=297.65625),
                    XpansionOutputCandidateInvest(invest=298.828125),
                    XpansionOutputCandidateInvest(invest=299.4140625),
                    XpansionOutputCandidateInvest(invest=299.70703125),
                    XpansionOutputCandidateInvest(invest=299.853515625),
                    XpansionOutputCandidateInvest(invest=299.9267578125),
                    XpansionOutputCandidateInvest(invest=299.96337890625),
                    XpansionOutputCandidateInvest(invest=299.981689453125),
                    XpansionOutputCandidateInvest(invest=299.9908447265625),
                    XpansionOutputCandidateInvest(invest=299.99542236328125),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                    XpansionOutputCandidateInvest(invest=0.0),
                ],
            ),
        },
    )


@pytest.fixture
def xpansion_sensitivity_expected_output() -> XpansionSensitivityResult:
    return XpansionSensitivityResult(
        antares=XpansionOutputAntares(version="9.2.0-rc7"),
        antares_xpansion=XpansionOutputAntares(version="1.4.0"),
        best_benders_cost=132222947226.60637,
        epsilon=100000.0,
        candidates={
            "102_fr_storage_energyconst": XpansionOutputCandidateSensitivity(
                lb=0.0,
                ub=2500.0,
                solution_max=XpansionOutputCandidateInvest(invest=2.520208288663973),
                solution_min=XpansionOutputCandidateInvest(invest=0.043657588539645076),
            ),
            "102_fr_storage_pump": XpansionOutputCandidateSensitivity(
                lb=0.0,
                ub=20000.0,
                solution_max=XpansionOutputCandidateInvest(invest=20.161666309311784),
                solution_min=XpansionOutputCandidateInvest(invest=0.3492607083171606),
            ),
            "102_fr_storage_turb": XpansionOutputCandidateSensitivity(
                lb=0.0,
                ub=20000.0,
                solution_max=XpansionOutputCandidateInvest(invest=20.161666309311784),
                solution_min=XpansionOutputCandidateInvest(invest=0.34926070825895295),
            ),
            "29_be_36_nl67_id_hyb_6": XpansionOutputCandidateSensitivity(
                lb=0.0,
                ub=2000.0,
                solution_max=XpansionOutputCandidateInvest(invest=2000.0),
                solution_min=XpansionOutputCandidateInvest(invest=-0.0),
            ),
            "30_be_33_nl_id_346": XpansionOutputCandidateSensitivity(
                lb=0.0,
                ub=1000.0,
                solution_max=XpansionOutputCandidateInvest(invest=-0.0),
                solution_min=XpansionOutputCandidateInvest(invest=-0.0),
            ),
            "30_be_storage_energyconst": XpansionOutputCandidateSensitivity(
                lb=0.0,
                ub=2500.0,
                solution_max=XpansionOutputCandidateInvest(invest=0.0),
                solution_min=XpansionOutputCandidateInvest(invest=0.0),
            ),
        },
        solution_max=XpansionOutputSensitivitySolution(
            objective=3982100703.915628, problem_type="capex", status=0, system_cost=132223047226.60637
        ),
        solution_min=XpansionOutputSensitivitySolution(
            objective=3295281252.030145, problem_type="capex", status=0, system_cost=132223047226.6064
        ),
    )
